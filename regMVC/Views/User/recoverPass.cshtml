@model regMVC.Models.userRecoverPass

@{
    ViewBag.Title = "recoverPass";
}

<head>
    <style>
        .body1 {
            background-image: url('../../Images/purple_mountain.jpg');
            background-size:cover;
        }

        .btn, .btn-default {
            background-color: rgba(3, 169, 244, 0.68);
            padding: 5px 10px;
            text-decoration: none;
            color: antiquewhite;
            letter-spacing: 2px;
            font-size: 13px;
        }

        .btn:before, btn-default:before {
            content: '';
            width: 100%;
            height: 100%;
            background: #03a9f4;
            z-index: -1;
            transition: transform 0.5s;
            transform-origin: bottom right;
            transform: scale(0);
        }

        .btn:hover:before, btn-default:hover:before {
            transition: transform 0.5s;
            transform-origin: top left;
            transform: scale(1);
        }
    </style>
</head>

<body class="body1">
    <h2>Restablecer Contraseña</h2>

    @if (ViewBag.Status != null && Convert.ToBoolean(ViewBag.Status))
    {
        if (ViewBag.Message != null)
        {
            <div class="alert alert-success">
                <strong>Contraseña actualizada </strong>@ViewBag.Message
            </div>
        }
    }
    else
    {
        using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.cedula, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.cedula, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.newpass, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.newpass, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.newpass, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">

                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Cambiar contraseña" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }
    }
    <div>
        <a class="btn btn-default" href="~/user/Login">&laquo; Inicio de sesión </a>
    </div>
</body>